import React, {Component} from 'react';
import {StyleSheet, View, Dimensions, Text} from 'react-native';
import {GoogleSignin, GoogleSigninButton} from 'react-native-google-signin';

export default class LoginForm extends Component {

    constructor(props) {
        super(props);
        this.state = {
            user: null,
            error: null
        };
    }

    async componentDidMount() {
        await this.configureGoogleSignIn();
        await this.getCurrentUser();
    }

    async configureGoogleSignIn() {
        await GoogleSignin.hasPlayServices({autoResolve: true};
	const configPlatform = {
	  ...Platform.select({
	    ios: 
        };

        await GoogleSignin.configure({
            ...configPlatform,
            webClientId: '***REMOVED***'
        });
    }

    render() {
        const {user, error} = this.state;
        if (!user) {
            return (
                <View style={styles.container}>
                    <GoogleSigninButton
                        style={styles.signInButton}
                        size={GoogleSigninButton.Size.Icon}
                        color={GoogleSigninButton.Color.Light}
                        onPress={this.onLoginButtonClick}
                    />
                </View>
            );
        } else {
            <View style={styles.container}>
                <Text>
                    Welcome, {user.email}
                </Text>
            </View>
        }
    }


    onLoginButtonClick() {
        // checking if device has Google Play Services installed
        // always returns true on iOS
        GoogleSignin.hasPlayServices({autoResolve: true})
            .then(() => {
                // play services are available
                this.signIn();
            })
            .catch(err => {
                console.log('Play services error', err.code, err.message);
            });
    }

    signIn = async() => {
        try {
            const user = await GoogleSignin.signIn();
            this.setState({user, error:null});
        } catch (error) {
            if (error.code == 'CANCELED') {
                error.message = 'User canceled login';
            }
            this.setState({error});
        }
    };

    async getCurrentUser() {
        try {
            const user = await GoogleSignin.currentUserAsync();
            this.setState({user, error:null});
        } catch (error) {
            this.setState({error});
        }
    }
}

const DEVICE_WIDTH = Dimensions.get('window').width;

const styles = StyleSheet.create({
   container: {
       justifyContent: 'center',
       flex: 1,
       alignItems: 'center',
   },
    signInButton: {
        width: 312, 
        height: 60
    }
});
