input CreateNucleusConnectConversationsInput {
	conversationId: String!
	messageId: [String]
}

input CreateNucleusConnectMessagesInput {
	conversationId: String!
}

input CreateNucleusDiscoverUsersInput {
	firebaseId: String!
	geohash: String!
	online: Int
}

input DeleteNucleusConnectConversationsInput {
	conversationId: String!
}

input DeleteNucleusConnectMessagesInput {
	conversationId: String!
}

input DeleteNucleusDiscoverUsersInput {
	firebaseId: String!
	geohash: String!
}

type Mutation {
	createNucleusDiscoverUsers(input: CreateNucleusDiscoverUsersInput!): NucleusDiscoverUsers
	updateNucleusDiscoverUsers(input: UpdateNucleusDiscoverUsersInput!): NucleusDiscoverUsers
	deleteNucleusDiscoverUsers(input: DeleteNucleusDiscoverUsersInput!): NucleusDiscoverUsers
	createNucleusConnectConversations(input: CreateNucleusConnectConversationsInput!): NucleusConnectConversations
	updateNucleusConnectConversations(input: UpdateNucleusConnectConversationsInput!): NucleusConnectConversations
	deleteNucleusConnectConversations(input: DeleteNucleusConnectConversationsInput!): NucleusConnectConversations
	createNucleusConnectMessages(input: CreateNucleusConnectMessagesInput!): NucleusConnectMessages
	updateNucleusConnectMessages(input: UpdateNucleusConnectMessagesInput!): NucleusConnectMessages
	deleteNucleusConnectMessages(input: DeleteNucleusConnectMessagesInput!): NucleusConnectMessages
}

type NucleusConnectConversations {
	conversationId: String!
	messageId: [String]
}

type NucleusConnectConversationsConnection {
	items: [NucleusConnectConversations]
	nextToken: String
}

type NucleusConnectMessages {
	conversationId: String!
}

type NucleusConnectMessagesConnection {
	items: [NucleusConnectMessages]
	nextToken: String
}

type NucleusDiscoverUsers {
	firebaseId: String!
	geohash: String!
	online: Int
	username: String
}

type NucleusDiscoverUsersConnection {
	items: [NucleusDiscoverUsers]
	nextToken: String
}

type Query {
	getNucleusDiscoverUsers(firebaseId: String!, geohash: String!): NucleusDiscoverUsers
	listNucleusDiscoverUsers(filter: TableNucleusDiscoverUsersFilterInput, limit: Int, nextToken: String): NucleusDiscoverUsersConnection
	queryNucleusDiscoverUsersByOnlineIndex(online: Int!, first: Int, after: String): NucleusDiscoverUsersConnection
	getNucleusConnectConversations(conversationId: String!): NucleusConnectConversations
	listNucleusConnectConversations(filter: TableNucleusConnectConversationsFilterInput, limit: Int, nextToken: String): NucleusConnectConversationsConnection
	getNucleusConnectMessages(conversationId: String!): NucleusConnectMessages
	listNucleusConnectMessages(filter: TableNucleusConnectMessagesFilterInput, limit: Int, nextToken: String): NucleusConnectMessagesConnection
}

type Subscription {
	onCreateNucleusDiscoverUsers(firebaseId: String, geohash: String, online: Int): NucleusDiscoverUsers
		@aws_subscribe(mutations: ["createNucleusDiscoverUsers"])
	onUpdateNucleusDiscoverUsers(firebaseId: String, geohash: String, online: Int): NucleusDiscoverUsers
		@aws_subscribe(mutations: ["updateNucleusDiscoverUsers"])
	onDeleteNucleusDiscoverUsers(firebaseId: String, geohash: String, online: Int): NucleusDiscoverUsers
		@aws_subscribe(mutations: ["deleteNucleusDiscoverUsers"])
	onCreateNucleusConnectConversations(conversationId: String, messageId: [String]): NucleusConnectConversations
		@aws_subscribe(mutations: ["createNucleusConnectConversations"])
	onUpdateNucleusConnectConversations(conversationId: String, messageId: [String]): NucleusConnectConversations
		@aws_subscribe(mutations: ["updateNucleusConnectConversations"])
	onDeleteNucleusConnectConversations(conversationId: String, messageId: [String]): NucleusConnectConversations
		@aws_subscribe(mutations: ["deleteNucleusConnectConversations"])
	onCreateNucleusConnectMessages(conversationId: String): NucleusConnectMessages
		@aws_subscribe(mutations: ["createNucleusConnectMessages"])
	onUpdateNucleusConnectMessages(conversationId: String): NucleusConnectMessages
		@aws_subscribe(mutations: ["updateNucleusConnectMessages"])
	onDeleteNucleusConnectMessages(conversationId: String): NucleusConnectMessages
		@aws_subscribe(mutations: ["deleteNucleusConnectMessages"])
}

input TableBooleanFilterInput {
	ne: Boolean
	eq: Boolean
}

input TableFloatFilterInput {
	ne: Float
	eq: Float
	le: Float
	lt: Float
	ge: Float
	gt: Float
	contains: Float
	notContains: Float
	between: [Float]
}

input TableIDFilterInput {
	ne: ID
	eq: ID
	le: ID
	lt: ID
	ge: ID
	gt: ID
	contains: ID
	notContains: ID
	between: [ID]
	beginsWith: ID
}

input TableIntFilterInput {
	ne: Int
	eq: Int
	le: Int
	lt: Int
	ge: Int
	gt: Int
	contains: Int
	notContains: Int
	between: [Int]
}

input TableNucleusConnectConversationsFilterInput {
	conversationId: TableStringFilterInput
	messageId: TableStringFilterInput
}

input TableNucleusConnectMessagesFilterInput {
	conversationId: TableStringFilterInput
}

input TableNucleusDiscoverUsersFilterInput {
	firebaseId: TableStringFilterInput
	geohash: TableStringFilterInput
	online: TableIntFilterInput
}

input TableStringFilterInput {
	ne: String
	eq: String
	le: String
	lt: String
	ge: String
	gt: String
	contains: String
	notContains: String
	between: [String]
	beginsWith: String
}

input UpdateNucleusConnectConversationsInput {
	conversationId: String!
	messageId: [String]
}

input UpdateNucleusConnectMessagesInput {
	conversationId: String!
}

input UpdateNucleusDiscoverUsersInput {
	firebaseId: String!
	geohash: String!
	online: Int
}